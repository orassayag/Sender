/* fileUtils, pathUtils,  */
/*         if (!await fileUtils.isPathExists(this.accountsData.accountsFilePath)) {
            throw new Error(`Invalid or no accountsFilePath parameter was found: Excpected a number but received: ${this.accountsData.accountsFilePath} (need)`);
        }
        if (!fileUtils.isFilePath(this.accountsData.accountsFilePath)) {
            throw new Error(`The parameter path accountsFilePath marked as file but it's a path of a directory: ${this.accountsData.accountsFilePath} (need)`);
        }
        const extension = pathUtils.getExtension(this.accountsData.accountsFilePath);
        if (extension !== '.json') {
            throw new Error(`The parameter path accountsFilePath must be a JSON file but it's: ${extension} file (need)`);
        }
        const accountsFileData = await fileUtils.read(this.accountsData.accountsFilePath);
        const accounts = JSON.parse(accountsFileData);
        if (accounts.length <= 0) {
            throw new Error('No accounts found in the account.json file (need)');
        } */
/* const accounts = require('../../../misc/data/accounts/accounts'); */
/*         if (accounts.length <= 0) {
            throw new Error('No accounts found in the account.json file. (1000005)');
        } */

        /*         from: fromEmailAddress,
                fromname: emailSenderName, */

                        //console.log(this.templatesData.cvFilePath);
/* const templates = require('../../../misc/data/templates/templates'); */
/*         if (templates.length <= 0) {
            throw new Error('No templates found in the templates.json file. (1000031)');
        } */
        /*         const fileName = 'CV Billy Ravid.doc';
        const cvFilePath = pathUtils.getJoinPath({
            targetPath: __dirname,
            targetName: `../../../misc/data/cv/${fileName}`
        }); */
        //const cvFilePath =

        /*         const fileName = 'monitor.txt';
        const path = pathUtils.getJoinPath({
            targetPath: __dirname,
            targetName: `../../../misc/data/monitor/${fileName}`
        }); */